{"ast":null,"code":"import axios from 'axios';\nrequire('dotenv').config();\n\n// Your Bing Search API key (replace with your actual key)\nconst apiKey2 = process.env.API_KEY2;\nconsole.log();\nconst searchUrl = \"https://api.bing.microsoft.com/v7.0/images/search\";\n\n// Function to fetch an image URL\nexport async function fetchImage(name) {\n  const params = {\n    q: name,\n    count: 1,\n    imageType: \"photo\",\n    size: \"medium\"\n  };\n  const headers = {\n    \"Ocp-Apim-Subscription-Key\": apiKey2\n  };\n  try {\n    const response = await axios.get(searchUrl, {\n      headers,\n      params\n    });\n    const searchResults = response.data;\n    if (searchResults.value && searchResults.value.length > 0) {\n      return searchResults.value[0].contentUrl; // Return the image URL\n    } else {\n      throw new Error(`No images found for ${name}`);\n    }\n  } catch (error) {\n    console.error(`Error fetching image for ${name}: ${error.message}`);\n    throw error;\n  }\n}","map":{"version":3,"names":["axios","require","config","apiKey2","process","env","API_KEY2","console","log","searchUrl","fetchImage","name","params","q","count","imageType","size","headers","response","get","searchResults","data","value","length","contentUrl","Error","error","message"],"sources":["/Users/raveesh/Documents/MDG_hack/src/components/Script.js"],"sourcesContent":["import axios from 'axios';\nrequire('dotenv').config();\n\n// Your Bing Search API key (replace with your actual key)\nconst apiKey2 = process.env.API_KEY2;\nconsole.log()\nconst searchUrl = \"https://api.bing.microsoft.com/v7.0/images/search\";\n\n// Function to fetch an image URL\nexport async function fetchImage(name) {\n  const params = {\n    q: name,\n    count: 1,\n    imageType: \"photo\",\n    size: \"medium\"\n  };\n\n  const headers = { \"Ocp-Apim-Subscription-Key\": apiKey2 };\n\n  try {\n\n    const response = await axios.get(searchUrl, { headers, params });\n    const searchResults = response.data;\n    if (searchResults.value && searchResults.value.length > 0) {\n      return searchResults.value[0].contentUrl; // Return the image URL\n    } else {\n      throw new Error(`No images found for ${name}`);\n    }\n  } catch (error) {\n    console.error(`Error fetching image for ${name}: ${error.message}`);\n    throw error;\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzBC,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC;;AAE1B;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ;AACpCC,OAAO,CAACC,GAAG,CAAC,CAAC;AACb,MAAMC,SAAS,GAAG,mDAAmD;;AAErE;AACA,OAAO,eAAeC,UAAUA,CAACC,IAAI,EAAE;EACrC,MAAMC,MAAM,GAAG;IACbC,CAAC,EAAEF,IAAI;IACPG,KAAK,EAAE,CAAC;IACRC,SAAS,EAAE,OAAO;IAClBC,IAAI,EAAE;EACR,CAAC;EAED,MAAMC,OAAO,GAAG;IAAE,2BAA2B,EAAEd;EAAQ,CAAC;EAExD,IAAI;IAEF,MAAMe,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAACV,SAAS,EAAE;MAAEQ,OAAO;MAAEL;IAAO,CAAC,CAAC;IAChE,MAAMQ,aAAa,GAAGF,QAAQ,CAACG,IAAI;IACnC,IAAID,aAAa,CAACE,KAAK,IAAIF,aAAa,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACzD,OAAOH,aAAa,CAACE,KAAK,CAAC,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IAC5C,CAAC,MAAM;MACL,MAAM,IAAIC,KAAK,CAAC,uBAAuBd,IAAI,EAAE,CAAC;IAChD;EACF,CAAC,CAAC,OAAOe,KAAK,EAAE;IACdnB,OAAO,CAACmB,KAAK,CAAC,4BAA4Bf,IAAI,KAAKe,KAAK,CAACC,OAAO,EAAE,CAAC;IACnE,MAAMD,KAAK;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}