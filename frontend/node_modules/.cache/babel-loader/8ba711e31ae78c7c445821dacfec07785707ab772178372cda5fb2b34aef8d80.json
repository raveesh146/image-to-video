{"ast":null,"code":"var _jsxFileName = \"/Users/raveesh/Documents/MDG_hack/image-to-video/src/components/ImageFetcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { fetchImage } from './Script'; // Adjust the import path based on where you save this file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageFetcher = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [imageUrl, setImageUrl] = useState(null);\n  const [error, setError] = useState(null);\n  const handleSearch = async () => {\n    try {\n      setError(null); // Reset error state\n      const url = await fetchImage(searchTerm);\n      setImageUrl(url);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search for Actress Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      placeholder: \"Enter actress name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"Fetched actress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageFetcher, \"nVBt7NvTI/7sYKiZkjtbeSyYMcI=\");\n_c = ImageFetcher;\nexport default ImageFetcher;\nvar _c;\n$RefreshReg$(_c, \"ImageFetcher\");","map":{"version":3,"names":["React","useState","fetchImage","jsxDEV","_jsxDEV","ImageFetcher","_s","searchTerm","setSearchTerm","imageUrl","setImageUrl","error","setError","handleSearch","url","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/raveesh/Documents/MDG_hack/image-to-video/src/components/ImageFetcher.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { fetchImage } from './Script'; // Adjust the import path based on where you save this file\n\nconst ImageFetcher = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [imageUrl, setImageUrl] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleSearch = async () => {\n    try {\n      setError(null); // Reset error state\n      const url = await fetchImage(searchTerm);\n      setImageUrl(url);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Search for Actress Image</h1>\n      <input\n        type=\"text\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        placeholder=\"Enter actress name\"\n      />\n      <button onClick={handleSearch}>Search</button>\n      \n      {error && <p>Error: {error}</p>}\n      {imageUrl && <img src={imageUrl} alt=\"Fetched actress\" />}\n    </div>\n  );\n};\n\nexport default ImageFetcher;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFD,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MAChB,MAAME,GAAG,GAAG,MAAMZ,UAAU,CAACK,UAAU,CAAC;MACxCG,WAAW,CAACI,GAAG,CAAC;IAClB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZH,QAAQ,CAACG,GAAG,CAACC,OAAO,CAAC;IACvB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEhB,UAAW;MAClBiB,QAAQ,EAAGC,CAAC,IAAKjB,aAAa,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAoB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACFjB,OAAA;MAAQwB,OAAO,EAAEf,YAAa;MAAAI,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE7CV,KAAK,iBAAIP,OAAA;MAAAa,QAAA,GAAG,SAAO,EAACN,KAAK;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BZ,QAAQ,iBAAIL,OAAA;MAAKyB,GAAG,EAAEpB,QAAS;MAACqB,GAAG,EAAC;IAAiB;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACf,EAAA,CA9BID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAgClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}